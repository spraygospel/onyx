# Onyx Local Development Configuration
# MinIO S3 Storage Configuration (matches docker-compose.dev.yml defaults)
S3_AWS_ACCESS_KEY_ID=minioadmin
S3_AWS_SECRET_ACCESS_KEY=onyx_minio_password_2025
S3_ENDPOINT_URL=http://localhost:9004
S3_FILE_STORE_BUCKET_NAME=onyx-file-store-bucket

# Database Configuration  
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_DB=postgres

# Redis Cache Configuration
REDIS_HOST=localhost
REDIS_PORT=6379

# Vespa Search Configuration
VESPA_HOST=localhost
VESPA_PORT=8081
VESPA_APPLICATION_ENDPOINT=http://localhost:8081

# Development Settings
AUTH_TYPE=disabled
LOG_LEVEL=info

# Port Configuration
WEB_DOMAIN=http://localhost:9000
API_URL=http://localhost:8080

# Model Server Configuration  
MODEL_SERVER_HOST=localhost
MODEL_SERVER_PORT=9001


# LLM Provider Configuration (Choose one)
# For local development, use local model server
# GEN_AI_MODEL_PROVIDER=local

# Or configure external provider (uncomment if needed):
# GEN_AI_MODEL_PROVIDER=openai
# OPENAI_API_KEY=your-openai-key
# GEN_AI_MODEL_VERSION=gpt-3.5-turbo

# Or use Groq (uncomment if needed):
# GEN_AI_MODEL_PROVIDER=groq  
# GROQ_API_KEY=your-groq-key
# GEN_AI_MODEL_VERSION=llama-3.1-8b-instant
GROQ_API_KEY=gsk_23kihqaS

# CORS Configuration for Frontend Development
CORS_ALLOWED_ORIGIN=http://localhost:9000,http://127.0.0.1:9000,
